#!yasl_macos
#!
read
!][

0:("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"):1	//initiall base_charactor_stack1
0:(0):2																		//initiall increment_stack2

{
	1 "+"
	eval
}increment

{
	=
	1:=
	2:=
	]#[
	==
}find_base64

{
	2:= 2 %:3
	2:(1 >>):2
}set_binary

{
	6
	#(set_binary)							//set int to barary
	3:(6 []):3
	!
}find_base64_true

{
	"can not find base64 charactor\n" print
	exit
}error_b64

{
	(2:= 63 <=)?
	(
		(find_base64)?
			(find_base64_true) : (2: increment :2 find_base64_loop)
	):
	(
		(= "\n" ==) ?
			(! 2:(! 0):2 find_base64_loop) : (error_b64)
	)
}find_base64_loop

1 -
#find_base64_loop
print_stack
{
	(2:= 8 ==)?
		(
			4:(8 []):4 2:(! 0):2
		)
}make_byte_lst

{
	0:(= !):4
	2:increment:2
	make_byte_lst
}shift_6bit

3:#
#(
	3:][:0
	#(shift_6bit)
)
print_stack
{
	"not rectangle\n" print
	exit
}error_rect

2:= 0 != ?
	(error_rect)

{
		1 2:= <<
		"+"
		eval
}shift_decial

{
	1 & 1 == ?
		(3:shift_decial:3)
	2:increment:2
}shift_binary

{
	3:(0):3				//decimal_stack_initall
	4:][
	#(shift_binary)
	2:(! 0):2
}binary_to_decimal

4:#
#(binary_to_decimal)
print_stack
{
	";"
	3: =
	""
    +
	+
    3:!
}get_from_rgb_stack

{
    "\e[48;2"
    get_from_rgb_stack // R
    get_from_rgb_stack // G
    get_from_rgb_stack // B
    "m  "
    +
    +
    +
    +
    print
}put_rgb_loop

3:# 3 /
#(put_rgb_loop)
